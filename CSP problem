from typing import Dict

def is_safe(node, color, graph, colors):
    for neighbor in graph[node]:
        if colors.get(neighbor) == color:
            return False
    return True

def graph_coloring(graph, colors, color_list, node=0):
    if node == len(graph):
        return True
    
    for color in color_list:
        if is_safe(node, color, graph, colors):
            colors[node] = color
            if graph_coloring(graph, colors, color_list, node + 1):
                return True
            colors[node] = None
    return False

# Define graph and color list
graph = {
    0: [1, 2],
    1: [0, 2, 3],
    2: [0, 1, 3],
    3: [1, 2]
}
color_list = ['Red', 'Green', 'Blue']
colors = {}

# Run the algorithm
if graph_coloring(graph, colors, color_list):
    print("Solution exists with the following colors:")
    for node, color in colors.items():
        print(f"Node {node}: {color}")
else:
    print("No solution exists.")
